$ curl -L https://github.com/golang-migrate/migrate/releases/download/$version/migrate.$os-$arch.tar.gz | tar xvz


-- -- name: ListLoans :many
-- SELECT 
--     l.*, 
--     p.branch_id 
-- FROM loans l
-- JOIN products p ON l.product_id = p.id
-- WHERE 
--     (? IS NULL OR p.branch_id = ?)
--     AND (? IS NULL OR l.client_id = ?)
--     AND (? IS NULL OR l.loan_officer = ?)
--     AND (? IS NULL OR l.status = ?)
-- LIMIT ? OFFSET ?;

-- -- name: ListLoans :many
-- SELECT 
--     l.*, 
--     p.branch_id,
--     c.full_name AS client_name,
--     u.full_name AS loan_officer_name
-- FROM loans l
-- JOIN products p ON l.product_id = p.id
-- JOIN clients c ON l.client_id = c.id
-- JOIN users u ON l.loan_officer = u.id
-- WHERE 
--     (? IS NULL OR p.branch_id = ?)
--     AND (
--         ? IS NULL 
--         OR c.full_name ILIKE '%' || ? || '%'
--         OR u.full_name ILIKE '%' || ? || '%'
--     )
--     AND (
--         ? IS NULL 
--         OR l.status = ANY (?)
--     )
-- LIMIT ? OFFSET ?;


<Sheet
				open={!!selectedRow}
				onOpenChange={(open: boolean) => {
					if (!open) {
						setSelectedRow(null);
					}
				}}
			>
				<SheetContent className="overflow-auto custom-sheet-class">
					<SheetHeader>
						<SheetTitle>Product Details</SheetTitle>
						<SheetDescription>
							Description goes here
						</SheetDescription>
					</SheetHeader>
					{selectedRow && (
						<div className="py-4">
							{Object.entries(selectedRow).map(([key, value]) => {
								// if (key === "createdBy" || key === "updatedBy") {
								// 	return;
								// }
								// if (fieldRenderers[key]) {
								// 	return (
								// 		<div key={key} className='grid grid-cols-[0.5fr_1fr] mb-4'>
								// 			<span className='font-medium capitalize'>{key}</span>
								// 			{fieldRenderers[key](value)}
								// 		</div>
								// 	);
								// }

								// return (
								// 	<div key={key} className='grid grid-cols-[0.5fr_1fr] mb-4'>
								// 		<span className='font-medium capitalize'>{key}</span>
								// 		{typeof value === "string" ||
								// 		typeof value === "number" ||
								// 		typeof value === "boolean" ? (
								// 			<Input
								// 				readOnly
								// 				placeholder={value.toString()}
								// 				className='bg-gray-100 text-gray-500'
								// 			/>
								// 		) : (
								// 			JSON.stringify(value)
								// 		)}
								// 	</div>
								// );
								return (
									<div
										key={key}
										className="grid grid-cols-[0.5fr_1fr] mb-4"
									>
										<span className="font-medium capitalize">
											{key}
										</span>
										<p>
											{typeof value == 'string' ? (
												<p>{value}</p>
											) : (
												JSON.stringify(value)
											)}
										</p>
									</div>
								);
							})}
							<Button
								size="lg"
								onClick={() => console.log('CLicked')}
								className="mt-8"
							>
								Save
							</Button>
						</div>
					)}
				</SheetContent>
			</Sheet>