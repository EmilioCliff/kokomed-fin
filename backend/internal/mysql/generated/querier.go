// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package generated

import (
	"context"
	"database/sql"
)

type Querier interface {
	AssignNonPosted(ctx context.Context, arg AssignNonPostedParams) (sql.Result, error)
	CheckActiveLoanForClient(ctx context.Context, clientID uint32) (bool, error)
	CheckUserExistance(ctx context.Context, email string) (int64, error)
	CountBranchesByCategory(ctx context.Context, arg CountBranchesByCategoryParams) (int64, error)
	CountClientLoans(ctx context.Context, arg CountClientLoansParams) (int64, error)
	CountClientsByCategory(ctx context.Context, arg CountClientsByCategoryParams) (int64, error)
	CountClientsNonPosted(ctx context.Context, arg CountClientsNonPostedParams) (int64, error)
	CountExpectedPayments(ctx context.Context, arg CountExpectedPaymentsParams) (int64, error)
	CountLoans(ctx context.Context, arg CountLoansParams) (int64, error)
	CountLoansByCategory(ctx context.Context, arg CountLoansByCategoryParams) (int64, error)
	CountNonPostedByCategory(ctx context.Context, arg CountNonPostedByCategoryParams) (int64, error)
	CountUnpaidInstallmentsData(ctx context.Context, arg CountUnpaidInstallmentsDataParams) (int64, error)
	CountUsersByCategory(ctx context.Context, arg CountUsersByCategoryParams) (int64, error)
	CreateBranch(ctx context.Context, name string) (sql.Result, error)
	CreateClient(ctx context.Context, arg CreateClientParams) (sql.Result, error)
	CreateClientOverpaymentTransaction(ctx context.Context, arg CreateClientOverpaymentTransactionParams) (sql.Result, error)
	CreateInstallment(ctx context.Context, arg CreateInstallmentParams) (sql.Result, error)
	CreateLoan(ctx context.Context, arg CreateLoanParams) (sql.Result, error)
	CreateNonPosted(ctx context.Context, arg CreateNonPostedParams) (sql.Result, error)
	CreatePaymentAllocation(ctx context.Context, arg CreatePaymentAllocationParams) (sql.Result, error)
	CreateProduct(ctx context.Context, arg CreateProductParams) (sql.Result, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (sql.Result, error)
	DashBoardDataHelper(ctx context.Context) (DashBoardDataHelperRow, error)
	DashBoardInactiveLoans(ctx context.Context) ([]DashBoardInactiveLoansRow, error)
	DashBoardRecentsPayments(ctx context.Context) ([]DashBoardRecentsPaymentsRow, error)
	DeductClientOverpayment(ctx context.Context, arg DeductClientOverpaymentParams) (sql.Result, error)
	DeleteBranch(ctx context.Context, id uint32) error
	DeleteClient(ctx context.Context, id uint32) (sql.Result, error)
	DeleteLoan(ctx context.Context, id uint32) error
	DeleteNonPosted(ctx context.Context, id uint32) error
	DeletePaymentAllocation(ctx context.Context, id uint32) (sql.Result, error)
	DeletePaymentAllocationsByNonPostedId(ctx context.Context, arg DeletePaymentAllocationsByNonPostedIdParams) (sql.Result, error)
	DeleteProduct(ctx context.Context, id uint32) error
	DisburseLoan(ctx context.Context, arg DisburseLoanParams) (sql.Result, error)
	GetActiveLoanDetails(ctx context.Context, clientID uint32) (GetActiveLoanDetailsRow, error)
	GetBranch(ctx context.Context, id uint32) (Branch, error)
	GetBranchReportData(ctx context.Context, arg GetBranchReportDataParams) ([]GetBranchReportDataRow, error)
	GetClient(ctx context.Context, id uint32) (Client, error)
	GetClientActiveLoan(ctx context.Context, arg GetClientActiveLoanParams) (uint32, error)
	GetClientAdminsReportData(ctx context.Context, arg GetClientAdminsReportDataParams) ([]GetClientAdminsReportDataRow, error)
	GetClientByPhoneNumber(ctx context.Context, phoneNumber string) (Client, error)
	GetClientClientsReportData(ctx context.Context, arg GetClientClientsReportDataParams) (GetClientClientsReportDataRow, error)
	// JOIN users updated ON c.updated_by = updated.id
	GetClientFullData(ctx context.Context, id uint32) (GetClientFullDataRow, error)
	GetClientIDByPhoneNumber(ctx context.Context, phoneNumber string) (uint32, error)
	// Left joins for optional fields (disbursed_by, updated_by, created_by)
	GetClientLoans(ctx context.Context, arg GetClientLoansParams) ([]GetClientLoansRow, error)
	GetClientOverpayment(ctx context.Context, id uint32) (float64, error)
	GetClientOverpaymentTransaction(ctx context.Context, id uint32) (ClientOverpaymentTransaction, error)
	GetClientOverpaymentTransactionByPaymentId(ctx context.Context, paymentID sql.NullInt32) (ClientOverpaymentTransaction, error)
	GetClientOverpaymentTransactions(ctx context.Context, clientID uint32) ([]ClientOverpaymentTransaction, error)
	GetClientsNonPosted(ctx context.Context, arg GetClientsNonPostedParams) ([]GetClientsNonPostedRow, error)
	GetInstallment(ctx context.Context, id uint32) (Installment, error)
	GetLoan(ctx context.Context, id uint32) (Loan, error)
	GetLoanClientID(ctx context.Context, id uint32) (uint32, error)
	GetLoanData(ctx context.Context) ([]uint32, error)
	GetLoanEvents(ctx context.Context) ([]GetLoanEventsRow, error)
	// Left joins for optional fields (disbursed_by, updated_by, created_by)
	GetLoanFullData(ctx context.Context, id uint32) (GetLoanFullDataRow, error)
	GetLoanReportDataById(ctx context.Context, id uint32) (GetLoanReportDataByIdRow, error)
	GetLoanStatus(ctx context.Context, id uint32) (LoansStatus, error)
	GetLoansReportData(ctx context.Context, arg GetLoansReportDataParams) ([]GetLoansReportDataRow, error)
	GetNonPosted(ctx context.Context, id uint32) (NonPosted, error)
	GetPaymentReportData(ctx context.Context, arg GetPaymentReportDataParams) ([]GetPaymentReportDataRow, error)
	GetProduct(ctx context.Context, id uint32) (GetProductRow, error)
	// SELECT * FROM products WHERE id = ? LIMIT 1;
	GetProductRepayAmount(ctx context.Context, id uint32) (float64, error)
	GetProductReportData(ctx context.Context, arg GetProductReportDataParams) ([]GetProductReportDataRow, error)
	GetTotalPaidByIDorAccountNo(ctx context.Context, arg GetTotalPaidByIDorAccountNoParams) (interface{}, error)
	GetUnpaidInstallmentsData(ctx context.Context, arg GetUnpaidInstallmentsDataParams) ([]GetUnpaidInstallmentsDataRow, error)
	GetUser(ctx context.Context, id uint32) (GetUserRow, error)
	GetUserAdminsReportData(ctx context.Context, arg GetUserAdminsReportDataParams) ([]GetUserAdminsReportDataRow, error)
	// SELECT * FROM users WHERE id = ? LIMIT 1;
	GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error)
	GetUserUsersReportData(ctx context.Context, arg GetUserUsersReportDataParams) (GetUserUsersReportDataRow, error)
	HelperClient(ctx context.Context) ([]HelperClientRow, error)
	HelperProduct(ctx context.Context) ([]HelperProductRow, error)
	HelperUser(ctx context.Context) ([]HelperUserRow, error)
	HelperUserById(ctx context.Context, id uint32) (string, error)
	ListAllNonPosted(ctx context.Context, arg ListAllNonPostedParams) ([]NonPosted, error)
	ListAllNonPostedByTransactionSource(ctx context.Context, transactionSource NonPostedTransactionSource) ([]NonPosted, error)
	ListBrachesByCategory(ctx context.Context, arg ListBrachesByCategoryParams) ([]Branch, error)
	ListBranches(ctx context.Context) ([]Branch, error)
	ListClients(ctx context.Context, arg ListClientsParams) ([]Client, error)
	ListClientsByActiveStatus(ctx context.Context, arg ListClientsByActiveStatusParams) ([]Client, error)
	ListClientsByBranch(ctx context.Context, arg ListClientsByBranchParams) ([]Client, error)
	ListClientsByCategory(ctx context.Context, arg ListClientsByCategoryParams) ([]ListClientsByCategoryRow, error)
	ListExpectedPayments(ctx context.Context, arg ListExpectedPaymentsParams) ([]ListExpectedPaymentsRow, error)
	ListInstallmentsByLoan(ctx context.Context, loanID uint32) ([]Installment, error)
	// Left joins for optional fields (disbursed_by, updated_by, created_by)
	ListLoans(ctx context.Context, arg ListLoansParams) ([]ListLoansRow, error)
	ListLoansByClient(ctx context.Context, arg ListLoansByClientParams) ([]Loan, error)
	ListLoansByLoanOfficer(ctx context.Context, arg ListLoansByLoanOfficerParams) ([]Loan, error)
	ListLoansByStatus(ctx context.Context, arg ListLoansByStatusParams) ([]Loan, error)
	ListNonDisbursedLoans(ctx context.Context, arg ListNonDisbursedLoansParams) ([]Loan, error)
	ListNonPostedByCategory(ctx context.Context, arg ListNonPostedByCategoryParams) ([]ListNonPostedByCategoryRow, error)
	ListNonPostedByTransactionSource(ctx context.Context, arg ListNonPostedByTransactionSourceParams) ([]NonPosted, error)
	ListPaymentAllocationsByLoanId(ctx context.Context, loanID sql.NullInt32) ([]PaymentAllocation, error)
	ListPaymentAllocationsByNonPostedId(ctx context.Context, nonPostedID uint32) ([]PaymentAllocation, error)
	ListProducts(ctx context.Context, arg ListProductsParams) ([]Product, error)
	ListProductsByBranch(ctx context.Context, arg ListProductsByBranchParams) ([]Product, error)
	ListProductsByCategory(ctx context.Context, arg ListProductsByCategoryParams) ([]ListProductsByCategoryRow, error)
	ListUnassignedNonPosted(ctx context.Context, arg ListUnassignedNonPostedParams) ([]NonPosted, error)
	ListUnpaidInstallmentsByLoan(ctx context.Context, loanID uint32) ([]Installment, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	ListUsersByCategory(ctx context.Context, arg ListUsersByCategoryParams) ([]ListUsersByCategoryRow, error)
	NullifyClientOverpayment(ctx context.Context, id uint32) (sql.Result, error)
	PayInstallment(ctx context.Context, arg PayInstallmentParams) (sql.Result, error)
	ReduceLoan(ctx context.Context, arg ReduceLoanParams) (sql.Result, error)
	RevertInstallment(ctx context.Context, arg RevertInstallmentParams) (sql.Result, error)
	SoftDeleteNonPosted(ctx context.Context, arg SoftDeleteNonPostedParams) error
	TransferLoan(ctx context.Context, arg TransferLoanParams) (sql.Result, error)
	UpdateBranch(ctx context.Context, arg UpdateBranchParams) (sql.Result, error)
	UpdateClient(ctx context.Context, arg UpdateClientParams) (sql.Result, error)
	UpdateClientOverpayment(ctx context.Context, arg UpdateClientOverpaymentParams) (sql.Result, error)
	UpdateInstallment(ctx context.Context, arg UpdateInstallmentParams) (sql.Result, error)
	UpdateLoan(ctx context.Context, arg UpdateLoanParams) (sql.Result, error)
	UpdateLoanProcessingFeeStatus(ctx context.Context, arg UpdateLoanProcessingFeeStatusParams) (sql.Result, error)
	UpdateLoanStatus(ctx context.Context, arg UpdateLoanStatusParams) (sql.Result, error)
	UpdateNonPosted(ctx context.Context, arg UpdateNonPostedParams) (sql.Result, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (sql.Result, error)
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) (sql.Result, error)
}

var _ Querier = (*Queries)(nil)
